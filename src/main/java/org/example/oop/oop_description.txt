1. Абстракция
   Абстракция похожа на использование умного устройства, не зная его сложной схемы.
   Например, чтобы переключить канал на телевизоре, мы просто нажимаем на кнопку на пульте,
   как кодируется пультом нажатие на кнопку, передается на телевизор и декодируется нам не важно.
   Важно чтобы канал переключился, а не тонкости радиотехники. Вот и в программировании абстракция означает
   предоставление основных функций без погружения в детали.

2. Инкапсуляция
   Инкапсуляция в программировании является объединением данных и кода, работающего с этими данными,
   в большинстве случае это сводится к тому, чтобы не давать доступа к важным данным напрямую.
   Вместо этого мы создаем ограниченный набор методов, с помощью которых можно работать с нашими данными.


3. Наследование
   Наследование в какой-то степени похоже с биологическим наследованием.
   Вы получаете какие-то черты от своих родителей, но, в то же время, отличаетесь от них.
   Или представьте это как базовую модель гаджета, к которой затем добавляются улучшенные версии с
   дополнительными функциями.

4. Полиморфизм
   Полиморфизм немного напоминает универсальный пульт дистанционного управления,
   который может адаптироваться для управления различными устройствами.
   В программировании это означает, что один интерфейс может использоваться
   для управления разными методами, давая разные результаты в зависимости от контекста.

------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------

Структура объектно-ориентированного программирования
В коде, написанном по парадигме ООП, выделяют четыре основных элемента:

1. Объект.
Часть кода, которая описывает элемент с конкретными характеристиками и функциями. Карточка товара в
каталоге интернет-магазина — это объект. Кнопка «заказать» — тоже.

2. Класс.
Шаблон, на базе которого можно построить объект в программировании. Например,
у интернет-магазина может быть класс «Карточка товара», который описывает общую структуру всех карточек.
И уже из него создаются конкретные карточки — объекты.
Классы могут наследоваться друг от друга. Например, есть общий класс «Карточка товара» и вложенные классы,
или подклассы: «Карточка бытовой техники», «Карточка ноутбука», «Карточка смартфона». Подкласс берёт свойства
из родительского класса, например, цену товара, количество штук на складе или производителя.
При этом имеет свои свойства, например, диагональ дисплея для «Карточки ноутбука» или количество
сим-карт для «Карточки смартфона».

3. Метод.
Функция внутри объекта или класса, которая позволяет взаимодействовать с ним или другой частью кода.
В примере с карточками товара метод может:
● Заполнить карточку конкретного объекта нужной информацией.
● Обновлять количество товара в наличии, сверяясь с БД.
● Сравнивать два товара между собой.
● Предлагать купить похожие товары.

4. Атрибут.
Характеристики объекта в программировании — например, цена, производитель или объём оперативной памяти.
В классе прописывают, что такие атрибуты есть, а в объектах с помощью методов заполняют эти атрибуты данными.